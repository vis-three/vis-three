import{_ as s,o as a,c as n,O as e}from"./chunks/framework.b643d968.js";const h=JSON.parse('{"title":"@vis-three/plugin-selection-support","description":"","frontmatter":{},"headers":[],"relativePath":"library/plugins/plugin-selection-support.md","filePath":"library/plugins/plugin-selection-support.md"}'),l={name:"library/plugins/plugin-selection-support.md"},o=e(`<h1 id="vis-three-plugin-selection-support" tabindex="-1">@vis-three/plugin-selection-support <a class="header-anchor" href="#vis-three-plugin-selection-support" aria-label="Permalink to &quot;@vis-three/plugin-selection-support&quot;">​</a></h1><p>配置化的选择支持插件。</p><p>此插件是在选择插件的基础上支持配置化的形式设置选中的物体。并且在交互选中的返回值中也会返回选中对象的配置 vid 信息。</p><h2 id="最新版本" tabindex="-1">最新版本 <a class="header-anchor" href="#最新版本" aria-label="Permalink to &quot;最新版本&quot;">​</a></h2><img alt="version" src="https://img.shields.io/npm/v/@vis-three/plugin-selection-support"><h2 id="license" tabindex="-1">license <a class="header-anchor" href="#license" aria-label="Permalink to &quot;license&quot;">​</a></h2><img alt="NPM" src="https://img.shields.io/npm/l/@vis-three/plugin-selection-support?color=blue"><h2 id="插件名称" tabindex="-1">插件名称 <a class="header-anchor" href="#插件名称" aria-label="Permalink to &quot;插件名称&quot;">​</a></h2><p><code>SelectionSupportPlugin</code></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>可以使用枚举：<code>SELECTION_SUPPORT_PLUGIN</code></p></div><h2 id="插件依赖" tabindex="-1">插件依赖 <a class="header-anchor" href="#插件依赖" aria-label="Permalink to &quot;插件依赖&quot;">​</a></h2><ul><li>@vis-three/middleware</li><li>@vis-three/plugin-selection</li></ul><h2 id="插件传参" tabindex="-1">插件传参 <a class="header-anchor" href="#插件传参" aria-label="Permalink to &quot;插件传参&quot;">​</a></h2><p>无</p><h2 id="引擎拓展" tabindex="-1">引擎拓展 <a class="header-anchor" href="#引擎拓展" aria-label="Permalink to &quot;引擎拓展&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SelectionSupportEngine</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SelectionEngine</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">EngineSupport</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**通过vid标识设置场景的选中对象 */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">setSelectionBoxBySymbol</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">symbols</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[]) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SelectionSupportEngine</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SelectionSupportEngine</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SelectionEngine</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">EngineSupport</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**通过vid标识设置场景的选中对象 */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">setSelectionBoxBySymbol</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">symbols</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[]) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SelectionSupportEngine</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,16),p=[o];function t(r,c,i,E,y,u){return a(),n("div",null,p)}const g=s(l,[["render",t]]);export{h as __pageData,g as default};
