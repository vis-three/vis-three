import{_ as a,o as e,c as s,O as t}from"./chunks/framework.c4814614.js";const _=JSON.parse('{"title":"class EventDispatcher","description":"","frontmatter":{},"headers":[],"relativePath":"en/api/core/EventDispatcher.md","filePath":"en/api/core/EventDispatcher.md"}'),n={name:"en/api/core/EventDispatcher.md"},o=t('<h1 id="class-eventdispatcher" tabindex="-1">class EventDispatcher <a class="header-anchor" href="#class-eventdispatcher" aria-label="Permalink to &quot;class EventDispatcher&quot;">​</a></h1><p>事件派发器。</p><h2 id="静态属性" tabindex="-1">静态属性 <a class="header-anchor" href="#静态属性" aria-label="Permalink to &quot;静态属性&quot;">​</a></h2><p>无</p><h2 id="静态方法" tabindex="-1">静态方法 <a class="header-anchor" href="#静态方法" aria-label="Permalink to &quot;静态方法&quot;">​</a></h2><p>无</p><h2 id="继承父类" tabindex="-1">继承父类 <a class="header-anchor" href="#继承父类" aria-label="Permalink to &quot;继承父类&quot;">​</a></h2><p>无</p><h2 id="构造传参" tabindex="-1">构造传参 <a class="header-anchor" href="#构造传参" aria-label="Permalink to &quot;构造传参&quot;">​</a></h2><p>无传参直接调用</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">dispatcher</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">EventDispatcher</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">dispatcher</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">EventDispatcher</span><span style="color:#24292E;">();</span></span></code></pre></div><h2 id="实例属性" tabindex="-1">实例属性 <a class="header-anchor" href="#实例属性" aria-label="Permalink to &quot;实例属性&quot;">​</a></h2><h3 id="listeners" tabindex="-1">listeners <a class="header-anchor" href="#listeners" aria-label="Permalink to &quot;listeners&quot;">​</a></h3><p>• 访问标记：<code>Private</code></p><p>• 属性类型： <code>Map</code>&lt;<code>string</code>, <code>Function</code>[]&gt;</p><h2 id="实例方法" tabindex="-1">实例方法 <a class="header-anchor" href="#实例方法" aria-label="Permalink to &quot;实例方法&quot;">​</a></h2>',16),r=[o];function l(c,p,i,h,d,E){return e(),s("div",null,r)}const y=a(n,[["render",l]]);export{_ as __pageData,y as default};
